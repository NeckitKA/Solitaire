//---------------------------------------------------------------------------

#pragma hdrstop

#include "Stock.h"
#include "Unit1.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
//---------------------------------------------------------------------------

Stock::Stock(int n, int x, int y, TForm* parentForm)
	: Stack(n, x, y, parentForm) {
	GetTImage()->OnMouseDown = OnMouseDown;
}
//---------------------------------------------------------------------------

void Stock::AddCard(Card* card) {
	cards.push_back(card);
}
//---------------------------------------------------------------------------

void Stock::RemoveCard() {
	cards.pop_back();
}
//---------------------------------------------------------------------------

void __fastcall Stock::OnMouseDown(TObject *Sender, TMouseButton Button, TShiftState Shift,
		  int X, int Y) {
	TForm1* form = dynamic_cast<TForm1*>(GetParentForm());

	if (Button == mbLeft && cards.size()==0) {

		int numOfCards  = form->waste->cards.size();
		for (int cardNum = numOfCards - 1; cardNum >= 0; --cardNum) {
			form->waste->cards[cardNum]->SetCardOpen(false);
			form->waste->cards[cardNum]->
				SetCardPicture(form->waste->cards[cardNum]->GetValue(),
					form->waste->cards[cardNum]->GetCardOpen());
			form->waste->cards[cardNum]->SetParentStack(form->stock);
			form->waste->cards[cardNum]->BringToFront();
			AddCard(form->waste->cards[cardNum]);
			form->waste->RemoveCard(cardNum);
		}
	}

	else if (Button == mbRight) {
		bool n—MFW = false; //no—ardsMoveFromWaste
		bool n—MFT0 = false; //no—ardsMoveFromTableau0
		bool n—MFT1 = false;
		bool n—MFT2 = false;
		bool n—MFT3 = false;
		bool n—MFT4 = false;
		bool n—MFT5 = false;
		bool n—MFT6 = false;
		while (!n—MFW && !n—MFT0 && !n—MFT1 && !n—MFT2 && !n—MFT3 && !n—MFT4 && !n—MFT5 && !n—MFT6) {


			Waste* waste = dynamic_cast<Waste*>(form->waste);

			if (!waste->cards.empty()) {
				while (!waste->cards.empty() && !n—MFW) {
					if ((!form->foundationStacks[0]->cards.empty() && (waste->cards.back()->GetValue()-4)==form->foundationStacks[0]->cards.back()->GetValue()) || ((waste->cards.back()->GetValue())<5 && form->foundationStacks[0]->cards.size()==0)) {
						waste->cards.back()->SetParentStack(form->foundationStacks[0]);
						form->foundationStacks[0]->AddCard(waste->cards.back());
						waste->cards.back()->BringToFront();
						waste->RemoveCard(waste->cards.size()-1);
					}

					else if ((!form->foundationStacks[1]->cards.empty() && (waste->cards.back()->GetValue()-4)==form->foundationStacks[1]->cards.back()->GetValue()) || ((waste->cards.back()->GetValue())<5 && form->foundationStacks[1]->cards.size()==0)) {
						waste->cards.back()->SetParentStack(form->foundationStacks[1]);
						form->foundationStacks[1]->AddCard(waste->cards.back());
						waste->cards.back()->BringToFront();
						waste->RemoveCard(waste->cards.size()-1);
					}

					else if ((!form->foundationStacks[2]->cards.empty() && (waste->cards.back()->GetValue()-4)==form->foundationStacks[2]->cards.back()->GetValue()) || ((waste->cards.back()->GetValue())<5 && form->foundationStacks[2]->cards.size()==0)) {
						waste->cards.back()->SetParentStack(form->foundationStacks[2]);
						form->foundationStacks[2]->AddCard(waste->cards.back());
						waste->cards.back()->BringToFront();
						waste->RemoveCard(waste->cards.size()-1);
					}

					else if ((!form->foundationStacks[3]->cards.empty() && (waste->cards.back()->GetValue()-4)==form->foundationStacks[3]->cards.back()->GetValue()) || ((waste->cards.back()->GetValue())<5 && form->foundationStacks[3]->cards.size()==0)) {
						waste->cards.back()->SetParentStack(form->foundationStacks[3]);
						form->foundationStacks[3]->AddCard(waste->cards.back());
						waste->cards.back()->BringToFront();
						waste->RemoveCard(waste->cards.size()-1);
					}
					else {
						n—MFW = true;
					}
				}
			}
			else {
				n—MFW = true;
            }

			Tableau* tableau0 = dynamic_cast<Tableau*>(form->tableauStacks[0]);
			Tableau* tableau1 = dynamic_cast<Tableau*>(form->tableauStacks[1]);
			Tableau* tableau2 = dynamic_cast<Tableau*>(form->tableauStacks[2]);
			Tableau* tableau3 = dynamic_cast<Tableau*>(form->tableauStacks[3]);
			Tableau* tableau4 = dynamic_cast<Tableau*>(form->tableauStacks[4]);
			Tableau* tableau5 = dynamic_cast<Tableau*>(form->tableauStacks[5]);
			Tableau* tableau6 = dynamic_cast<Tableau*>(form->tableauStacks[6]);

			if (!tableau0->cards.empty()) {
				while (!tableau0->cards.empty() && !n—MFT0) {
					if ((!form->foundationStacks[0]->cards.empty() && (tableau0->cards.back()->GetValue()-4)==form->foundationStacks[0]->cards.back()->GetValue()) || ((tableau0->cards.back()->GetValue())<5 && form->foundationStacks[0]->cards.size()==0)) {
						tableau0->cards.back()->SetParentStack(form->foundationStacks[0]);
						form->foundationStacks[0]->AddCard(tableau0->cards.back());
					}

					else if ((!form->foundationStacks[1]->cards.empty() && (tableau0->cards.back()->GetValue()-4)==form->foundationStacks[1]->cards.back()->GetValue()) || ((tableau0->cards.back()->GetValue())<5 && form->foundationStacks[1]->cards.size()==0)) {
						tableau0->cards.back()->SetParentStack(form->foundationStacks[1]);
						form->foundationStacks[1]->AddCard(tableau0->cards.back());
					}

					else if ((!form->foundationStacks[2]->cards.empty() && (tableau0->cards.back()->GetValue()-4)==form->foundationStacks[2]->cards.back()->GetValue()) || ((tableau0->cards.back()->GetValue())<5 && form->foundationStacks[2]->cards.size()==0)) {
						tableau0->cards.back()->SetParentStack(form->foundationStacks[2]);
						form->foundationStacks[2]->AddCard(tableau0->cards.back());
					}

					else if ((!form->foundationStacks[3]->cards.empty() && (tableau0->cards.back()->GetValue()-4)==form->foundationStacks[3]->cards.back()->GetValue()) || ((tableau0->cards.back()->GetValue())<5 && form->foundationStacks[3]->cards.size()==0)) {
						tableau0->cards.back()->SetParentStack(form->foundationStacks[3]);
						form->foundationStacks[3]->AddCard(tableau0->cards.back());
					}
					else {
						n—MFT0 = true;
					}
					if (!n—MFT0) {
						tableau0->cards.back()->BringToFront();
						tableau0->RemoveCard();
						if (!tableau0->cards.empty()) {
							tableau0->cards.back()->SetCardOpen(true);
							tableau0->cards.back()->SetCardPicture(tableau0->cards.back()->GetValue(),tableau0->cards.back()->GetCardOpen());
						}
					}
				}
			}
			else {
				n—MFT0 = true;
			}

			if (!tableau1->cards.empty()) {
				while (!tableau1->cards.empty() && !n—MFT1) {
					if ((!form->foundationStacks[0]->cards.empty() && (tableau1->cards.back()->GetValue()-4)==form->foundationStacks[0]->cards.back()->GetValue()) || ((tableau1->cards.back()->GetValue())<5 && form->foundationStacks[0]->cards.size()==0)) {
						tableau1->cards.back()->SetParentStack(form->foundationStacks[0]);
						form->foundationStacks[0]->AddCard(tableau1->cards.back());
					}

					else if ((!form->foundationStacks[1]->cards.empty() && (tableau1->cards.back()->GetValue()-4)==form->foundationStacks[1]->cards.back()->GetValue()) || ((tableau1->cards.back()->GetValue())<5 && form->foundationStacks[1]->cards.size()==0)) {
						tableau1->cards.back()->SetParentStack(form->foundationStacks[1]);
						form->foundationStacks[1]->AddCard(tableau1->cards.back());
					}

					else if ((!form->foundationStacks[2]->cards.empty() && (tableau1->cards.back()->GetValue()-4)==form->foundationStacks[2]->cards.back()->GetValue()) || ((tableau1->cards.back()->GetValue())<5 && form->foundationStacks[2]->cards.size()==0)) {
						tableau1->cards.back()->SetParentStack(form->foundationStacks[2]);
						form->foundationStacks[2]->AddCard(tableau1->cards.back());
					}

					else if ((!form->foundationStacks[3]->cards.empty() && (tableau1->cards.back()->GetValue()-4)==form->foundationStacks[3]->cards.back()->GetValue()) || ((tableau1->cards.back()->GetValue())<5 && form->foundationStacks[3]->cards.size()==0)) {
						tableau1->cards.back()->SetParentStack(form->foundationStacks[3]);
						form->foundationStacks[3]->AddCard(tableau1->cards.back());
					}
					else {
						n—MFT1 = true;
					}
					if (!n—MFT1) {
						tableau1->cards.back()->BringToFront();
						tableau1->RemoveCard();
						if (!tableau1->cards.empty()) {
							tableau1->cards.back()->SetCardOpen(true);
							tableau1->cards.back()->SetCardPicture(tableau1->cards.back()->GetValue(),tableau1->cards.back()->GetCardOpen());
						}
					}
				}
			}
            else {
				n—MFT1 = true;
			}

			if (!tableau2->cards.empty()) {
				while (!tableau2->cards.empty() && !n—MFT2) {
					if ((!form->foundationStacks[0]->cards.empty() && (tableau2->cards.back()->GetValue()-4)==form->foundationStacks[0]->cards.back()->GetValue()) || ((tableau2->cards.back()->GetValue())<5 && form->foundationStacks[0]->cards.size()==0)) {
						tableau2->cards.back()->SetParentStack(form->foundationStacks[0]);
						form->foundationStacks[0]->AddCard(tableau2->cards.back());
					}

					else if ((!form->foundationStacks[1]->cards.empty() && (tableau2->cards.back()->GetValue()-4)==form->foundationStacks[1]->cards.back()->GetValue()) || ((tableau2->cards.back()->GetValue())<5 && form->foundationStacks[1]->cards.size()==0)) {
						tableau2->cards.back()->SetParentStack(form->foundationStacks[1]);
						form->foundationStacks[1]->AddCard(tableau2->cards.back());
					}

					else if ((!form->foundationStacks[2]->cards.empty() && (tableau2->cards.back()->GetValue()-4)==form->foundationStacks[2]->cards.back()->GetValue()) || ((tableau2->cards.back()->GetValue())<5 && form->foundationStacks[2]->cards.size()==0)) {
						tableau2->cards.back()->SetParentStack(form->foundationStacks[2]);
						form->foundationStacks[2]->AddCard(tableau2->cards.back());
					}

					else if ((!form->foundationStacks[3]->cards.empty() && (tableau2->cards.back()->GetValue()-4)==form->foundationStacks[3]->cards.back()->GetValue()) || ((tableau2->cards.back()->GetValue())<5 && form->foundationStacks[3]->cards.size()==0)) {
						tableau2->cards.back()->SetParentStack(form->foundationStacks[3]);
						form->foundationStacks[3]->AddCard(tableau2->cards.back());
					}
					else {
						n—MFT2 = true;
					}
					if (!n—MFT2) {
						tableau2->cards.back()->BringToFront();
						tableau2->RemoveCard();
						if (!tableau2->cards.empty()) {
							tableau2->cards.back()->SetCardOpen(true);
							tableau2->cards.back()->SetCardPicture(tableau2->cards.back()->GetValue(),tableau2->cards.back()->GetCardOpen());
						}
					}
				}
			}
            else {
				n—MFT2 = true;
			}

			if (!tableau3->cards.empty()) {
				while (!tableau3->cards.empty() && !n—MFT3) {
					if ((!form->foundationStacks[0]->cards.empty() && (tableau3->cards.back()->GetValue()-4)==form->foundationStacks[0]->cards.back()->GetValue()) || ((tableau3->cards.back()->GetValue())<5 && form->foundationStacks[0]->cards.size()==0)) {
						tableau3->cards.back()->SetParentStack(form->foundationStacks[0]);
						form->foundationStacks[0]->AddCard(tableau3->cards.back());
					}

					else if ((!form->foundationStacks[1]->cards.empty() && (tableau3->cards.back()->GetValue()-4)==form->foundationStacks[1]->cards.back()->GetValue()) || ((tableau3->cards.back()->GetValue())<5 && form->foundationStacks[1]->cards.size()==0)) {
						tableau3->cards.back()->SetParentStack(form->foundationStacks[1]);
						form->foundationStacks[1]->AddCard(tableau3->cards.back());
					}

					else if ((!form->foundationStacks[2]->cards.empty() && (tableau3->cards.back()->GetValue()-4)==form->foundationStacks[2]->cards.back()->GetValue()) || ((tableau3->cards.back()->GetValue())<5 && form->foundationStacks[2]->cards.size()==0)) {
						tableau3->cards.back()->SetParentStack(form->foundationStacks[2]);
						form->foundationStacks[2]->AddCard(tableau3->cards.back());
					}

					else if ((!form->foundationStacks[3]->cards.empty() && (tableau3->cards.back()->GetValue()-4)==form->foundationStacks[3]->cards.back()->GetValue()) || ((tableau3->cards.back()->GetValue())<5 && form->foundationStacks[3]->cards.size()==0)) {
						tableau3->cards.back()->SetParentStack(form->foundationStacks[3]);
						form->foundationStacks[3]->AddCard(tableau3->cards.back());
					}
					else {
						n—MFT3 = true;
					}
					if (!n—MFT3) {
						tableau3->cards.back()->BringToFront();
						tableau3->RemoveCard();
						if (!tableau3->cards.empty()) {
							tableau3->cards.back()->SetCardOpen(true);
							tableau3->cards.back()->SetCardPicture(tableau3->cards.back()->GetValue(),tableau3->cards.back()->GetCardOpen());
						}
					}
				}
			}
            else {
				n—MFT3 = true;
			}

			if (!tableau4->cards.empty()) {
				while (!tableau4->cards.empty() && !n—MFT4) {
					if ((!form->foundationStacks[0]->cards.empty() && (tableau4->cards.back()->GetValue()-4)==form->foundationStacks[0]->cards.back()->GetValue()) || ((tableau4->cards.back()->GetValue())<5 && form->foundationStacks[0]->cards.size()==0)) {
						tableau4->cards.back()->SetParentStack(form->foundationStacks[0]);
						form->foundationStacks[0]->AddCard(tableau4->cards.back());
					}

					else if ((!form->foundationStacks[1]->cards.empty() && (tableau4->cards.back()->GetValue()-4)==form->foundationStacks[1]->cards.back()->GetValue()) || ((tableau4->cards.back()->GetValue())<5 && form->foundationStacks[1]->cards.size()==0)) {
						tableau4->cards.back()->SetParentStack(form->foundationStacks[1]);
						form->foundationStacks[1]->AddCard(tableau4->cards.back());;
					}

					else if ((!form->foundationStacks[2]->cards.empty() && (tableau4->cards.back()->GetValue()-4)==form->foundationStacks[2]->cards.back()->GetValue()) || ((tableau4->cards.back()->GetValue())<5 && form->foundationStacks[2]->cards.size()==0)) {
						tableau4->cards.back()->SetParentStack(form->foundationStacks[2]);
						form->foundationStacks[2]->AddCard(tableau4->cards.back());
					}

					else if ((!form->foundationStacks[3]->cards.empty() && (tableau4->cards.back()->GetValue()-4)==form->foundationStacks[3]->cards.back()->GetValue()) || ((tableau4->cards.back()->GetValue())<5 && form->foundationStacks[3]->cards.size()==0)) {
						tableau4->cards.back()->SetParentStack(form->foundationStacks[3]);
						form->foundationStacks[3]->AddCard(tableau4->cards.back());
					}
					else {
						n—MFT4 = true;
					}
					if (!n—MFT4) {
						tableau4->cards.back()->BringToFront();
						tableau4->RemoveCard();
						if (!tableau4->cards.empty()) {
							tableau4->cards.back()->SetCardOpen(true);
							tableau4->cards.back()->SetCardPicture(tableau4->cards.back()->GetValue(),tableau4->cards.back()->GetCardOpen());
						}
					}
				}
			}
            else {
				n—MFT4 = true;
			}
			if (!tableau5->cards.empty()) {
				while (!tableau5->cards.empty() && !n—MFT5) {
					if ((!form->foundationStacks[0]->cards.empty() && (tableau5->cards.back()->GetValue()-4)==form->foundationStacks[0]->cards.back()->GetValue()) || ((tableau5->cards.back()->GetValue())<5 && form->foundationStacks[0]->cards.size()==0)) {
						tableau5->cards.back()->SetParentStack(form->foundationStacks[0]);
						form->foundationStacks[0]->AddCard(tableau5->cards.back());
					}

					else if ((!form->foundationStacks[1]->cards.empty() && (tableau5->cards.back()->GetValue()-4)==form->foundationStacks[1]->cards.back()->GetValue()) || ((tableau5->cards.back()->GetValue())<5 && form->foundationStacks[1]->cards.size()==0)) {
						tableau5->cards.back()->SetParentStack(form->foundationStacks[1]);
						form->foundationStacks[1]->AddCard(tableau5->cards.back());
					}

					else if ((!form->foundationStacks[2]->cards.empty() && (tableau5->cards.back()->GetValue()-4)==form->foundationStacks[2]->cards.back()->GetValue()) || ((tableau5->cards.back()->GetValue())<5 && form->foundationStacks[2]->cards.size()==0)) {
						tableau5->cards.back()->SetParentStack(form->foundationStacks[2]);
						form->foundationStacks[2]->AddCard(tableau5->cards.back());
					}

					else if ((!form->foundationStacks[3]->cards.empty() && (tableau5->cards.back()->GetValue()-4)==form->foundationStacks[3]->cards.back()->GetValue()) || ((tableau5->cards.back()->GetValue())<5 && form->foundationStacks[3]->cards.size()==0)) {
						tableau5->cards.back()->SetParentStack(form->foundationStacks[3]);
						form->foundationStacks[3]->AddCard(tableau5->cards.back());
					}
					else {
						n—MFT5 = true;
					}
					if (!n—MFT5) {
						tableau5->cards.back()->BringToFront();
						tableau5->RemoveCard();
						if (!tableau5->cards.empty()) {
							tableau5->cards.back()->SetCardOpen(true);
							tableau5->cards.back()->SetCardPicture(tableau5->cards.back()->GetValue(),tableau5->cards.back()->GetCardOpen());
						}
					}
				}
			}
            else {
				n—MFT5 = true;
			}

			if (!tableau6->cards.empty()) {
				while (!tableau6->cards.empty() && !n—MFT6) {
					if ((!form->foundationStacks[0]->cards.empty() && (tableau6->cards.back()->GetValue()-4)==form->foundationStacks[0]->cards.back()->GetValue()) || ((tableau6->cards.back()->GetValue())<5 && form->foundationStacks[0]->cards.size()==0)) {
						tableau6->cards.back()->SetParentStack(form->foundationStacks[0]);
						form->foundationStacks[0]->AddCard(tableau6->cards.back());
					}

					else if ((!form->foundationStacks[1]->cards.empty() && (tableau6->cards.back()->GetValue()-4)==form->foundationStacks[1]->cards.back()->GetValue()) || ((tableau6->cards.back()->GetValue())<5 && form->foundationStacks[1]->cards.size()==0)) {
						tableau6->cards.back()->SetParentStack(form->foundationStacks[1]);
						form->foundationStacks[1]->AddCard(tableau6->cards.back());
					}

					else if ((!form->foundationStacks[2]->cards.empty() && (tableau6->cards.back()->GetValue()-4)==form->foundationStacks[2]->cards.back()->GetValue()) || ((tableau6->cards.back()->GetValue())<5 && form->foundationStacks[2]->cards.size()==0)) {
						tableau6->cards.back()->SetParentStack(form->foundationStacks[2]);
						form->foundationStacks[2]->AddCard(tableau6->cards.back());
					}

					else if ((!form->foundationStacks[3]->cards.empty() && (tableau6->cards.back()->GetValue()-4)==form->foundationStacks[3]->cards.back()->GetValue()) || ((tableau6->cards.back()->GetValue())<5 && form->foundationStacks[3]->cards.size()==0)) {
						tableau6->cards.back()->SetParentStack(form->foundationStacks[3]);
						form->foundationStacks[3]->AddCard(tableau6->cards.back());
					}
					else {
						n—MFT6 = true;
					}
					if (!n—MFT6) {
						tableau6->cards.back()->BringToFront();
						tableau6->RemoveCard();
						if (!tableau6->cards.empty()) {
							tableau6->cards.back()->SetCardOpen(true);
							tableau6->cards.back()->SetCardPicture(tableau6->cards.back()->GetValue(),tableau6->cards.back()->GetCardOpen());
						}
					}
				}
			}
            else {
				n—MFT6 = true;
			}
		}
	}
}
//---------------------------------------------------------------------------
